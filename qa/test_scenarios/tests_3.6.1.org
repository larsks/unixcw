#+TODO: TODO STARTED | FAILED DONE SKIPPED
# The vertical bar indicates which states are final states.

* STARTED Tests for unixcw version 3.6.1
Version of template: 2023.06.10.
** STARTED Main laptop, Debian GNU/Linux 12
gcc (Debian 12.2.0-14) 12.2.0
*** DONE Build system tests
**** DONE make distcheck
*Steps*
Run "make distcheck" in main directory of the project.

*Expected result*
1. Distribution package is built correctly (no errors during creation of
   archive).
2. Automatic tests executed during 'make distcheck' pass.
3. The distribution package contains all files intended for distribution (use
   your best judgement here).

*Actual result*
All three points are a PASS

**** DONE ./configure options

Test that all options supported by ./configure script produce "buildable" code.

*Steps*
Run ./qa/test_configure_options.sh

*Expected result*

The script should not report any failure.

Example of failed test:

$ qa/test_configure_options.sh
128: ./configure --enable-dev --disable-xcwcp --disable-cwcp --disable-pulseaudio --disable-alsa --disable-oss --disable-console &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
Test of configuration flags FAILED
$ echo $?
255

Example of successful test:

$ qa/test_configure_options.sh
128: ./configure --enable-dev --disable-xcwcp --disable-cwcp --disable-pulseaudio --disable-alsa --disable-oss --disable-console &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
127: ./configure --enable-dev --disable-xcwcp --disable-cwcp --disable-pulseaudio --disable-alsa --disable-oss &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
126: ./configure --enable-dev --disable-xcwcp --disable-cwcp --disable-pulseaudio --disable-alsa --disable-console &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
[...]
3: ./configure --disable-oss &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
2: ./configure --disable-console &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
1: ./configure &>/dev/null && make &>/dev/null && make check &>/dev/null && make clean &>/dev/null
Test of configuration flags SUCCEEDED

*Notes*
The shell script may not work on systems without bash.

*Actual result*
PASS, no issues found (512 compilations).

*** STARTED libcw tests
Tests using tools from unixcw/src/libcw.

Notice that Null sound system is tested as last one: first run tests on other
sound systems that allow you to hear some sound. With a real sound from
speaker or buzzer it's easier to notice problems with libcw. Don't waste time
on testing Null system first, only to hear issues with other sound systems
later.

**** SKIPPED Main test binary - Console sound system

*Steps*
cd src/libcw/tests
./libcw_tests -S c

*Expected results*
Test logs and summary table for tests shows only well-known problems.

*Test statistics table*

*Actual result*
Skipped. Console output is not available on this machine

**** SKIPPED Main test binary - OSS sound system

*Steps*
cd src/libcw/tests
./libcw_tests -S o

*Expected results*
Test logs and summary table for tests shows only well-known problems.

*Test statistics table*

*Actual result*
Skipped. Console output is not available on this machine

**** DONE Main test binary - ALSA sound system

*Steps*
cd src/libcw/tests
./libcw_tests -S a

*Expected results*
Test logs and summary table for tests shows only well-known problems.

*Test statistics table*

libcw tests: Statistics of tests (failures/total)

     | tone queue| generator |    key    |  receiver |    data   |    other  |
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   N |           |           |           |           |           |           |  
   N |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   C |           |           |           |           |           |           |  
   C |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   O |           |           |           |           |           |           |  
   O |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
-> A |         0 |        11 |         0 |         0 |         0 |         0 |<-
   A |       151 |      1003 |        48 |      1426 |        30 |       431 |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   P |           |           |           |           |           |           |  
   P |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
Duration of tests = 24 minutes, 54 seconds

*Actual result*

Pass. The failures occurred in 'test_cw_gen_state_callback' test, which is a
known problem.

**** DONE Main test binary - PulseAudio sound system

*Steps*
cd src/libcw/tests
./libcw_tests -S p

*Expected results*
Test logs and summary table for tests shows only well-known problems.

*Test statistics table*

     | tone queue| generator |    key    |  receiver |    data   |    other  |
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   N |           |           |           |           |           |           |  
   N |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   C |           |           |           |           |           |           |  
   C |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   O |           |           |           |           |           |           |  
   O |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
   A |           |           |           |           |           |           |  
   A |           |           |           |           |           |           |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+
-> P |         0 |        38 |         0 |         0 |         0 |         0 |<-
   P |       151 |      1003 |        48 |      1426 |        30 |       431 |  
   --+-----------+-----------+-----------+-----------+-----------+-----------+

*Actual result*

Pass. The failures occurred in 'test_cw_gen_state_callback' test, which is a
known problem.

**** TODO Main test binary - Null sound system

*Steps*
cd src/libcw/tests
./libcw_tests -S n

*Expected results*

Test logs and summary table for tests shows only well-known problems.

*Test statistics table*

*Actual result*

**** TODO Misc tests

***** TODO pcm sample file is disabled in regular builds

Confirm that by default libcw doesn't create a debug file into which raw PCM
samples are being written.

*Steps*

1. Confirm that in /tmp there is no file called
   "cw_file_<parameters>_pcm.raw" from previous runs of programs/tests.

2. Build package
./configure && make

3. Start a program that uses libcw to generate sound. Play any string.
./src/cw/cw

4. Exit the program.

5. Confirm that in /tmp there is no file called
   "cw_file_<parameters>_pcm.raw" from _current_ run of program done in
   step 3.

*** TODO cw tests
Tests of basic usage of unixcw/src/cw/cw program.

Tests that use *.cw files:
./src/cw/cw -f src/cw/test.cw
./src/cw/cw -f src/cw/demo.cw
./src/cw/cw -f src/cw/prelude.cw

*** TODO cwcp tests
Tests of basic usage of unixcw/src/cwcp/cwcp program.

*** TODO xcwcp tests

**** TODO basics
Tests of basic usage of unixcw/src/xcwcp/xcwcp program.

*** TODO cwgen tests
Tests of basic usage of unixcw/src/cwgen/cwgen program.

*** TODO receiving functionality
**** TODO xcwcp receiver tests

*Steps*
1. Enable xcwcp's receiver tests
  ./configure --enable-xcwcp-rec-test
2. Compile xcwcp
   make
3. Run xcwcp, use "Run Receiver Test" item in modes menu
   Observe console during and after execution of the test.
4. At the end of received text press "pause" button to end the test.
5. Check in console that the summary says "success":
   "[II] Test result: success"

*Expected result*
1. No errors reported in console.
2. Test's summary indicates success.



